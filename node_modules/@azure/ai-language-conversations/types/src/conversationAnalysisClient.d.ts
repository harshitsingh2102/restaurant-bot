import { AnalyzeConversationJobsInput, AnalyzeConversationOptionalParams, AnalyzeConversationResponse, AnalyzeConversationTaskUnion, ConversationAnalysisClientOptionalParams, ConversationAnalysisOptionalParams, ConversationAnalysisResponse } from "./models";
import { KeyCredential, TokenCredential } from "@azure/core-auth";
import { PollOperationState, PollerLike } from "@azure/core-lro";
/**
 * A client for interacting with the conversational language understanding
 * features in Azure Cognitive Language Service.
 *
 * The client needs the endpoint of a Language resource and an authentication
 * method such as an API key or AAD. The API key and endpoint can be found in
 * the Language resource page in the Azure portal. They will be located in the
 * resource's Keys and Endpoint page, under Resource Management.
 *
 * ### Examples for authentication:
 *
 * #### API Key
 *
 * ```js
 * import { AzureKeyCredential } from "@azure/core-auth";
 * import { ConversationAnalysisClient } from "@azure/ai-language-conversations";
 *
 * const endpoint = "https://<resource name>.cognitiveservices.azure.com";
 * const credential = new AzureKeyCredential("<api key>");
 *
 * const client = new ConversationAnalysisClient(endpoint, credential);
 * ```
 *
 * #### Azure Active Directory
 *
 * See the [`@azure/identity`](https://npmjs.com/package/\@azure/identity)
 * package for more information about authenticating with Azure Active Directory.
 *
 * ```js
 * import { ConversationAnalysisClient } from "@azure/ai-language-conversations";
 * import { DefaultAzureCredential } from "@azure/identity";
 *
 * const endpoint = "https://<resource name>.cognitiveservices.azure.com";
 * const credential = new DefaultAzureCredential();
 *
 * const client = new ConversationAnalysisClient(endpoint, credential);
 * ```
 */
export declare class ConversationAnalysisClient {
    private readonly _client;
    private readonly _tracing;
    /**
     * Initializes a new instance of the ConversationAnalysisClient class.
     * @param endpoint - Supported Cognitive Services endpoint (e.g.,
     *                 https://<resource-name>.api.cognitiveservices.azure.com).
     * @param options - The parameter options
     */
    constructor(endpoint: string, credential: TokenCredential | KeyCredential, options?: ConversationAnalysisClientOptionalParams);
    /**
     * Analyzes the input conversation utterance.
     * @param task - A single conversational task to execute.
     * @param options - The options parameters.
     */
    analyzeConversation(task: AnalyzeConversationTaskUnion, options?: AnalyzeConversationOptionalParams): Promise<AnalyzeConversationResponse>;
    /**
     * Submit a collection of conversations for analysis. Specify one or more unique tasks to be executed.
     * @param task - The collection of conversations to analyze and one or more tasks to execute.
     * @param options - The options parameters.
     */
    beginConversationAnalysis(task: AnalyzeConversationJobsInput, options?: ConversationAnalysisOptionalParams): Promise<PollerLike<PollOperationState<ConversationAnalysisResponse>, ConversationAnalysisResponse>>;
}
//# sourceMappingURL=conversationAnalysisClient.d.ts.map
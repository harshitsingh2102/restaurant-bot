{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/generated/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAy+BH,oFAAoF;AACpF,MAAM,CAAN,IAAY,gCAGX;AAHD,WAAY,gCAAgC;IAC1C,mBAAmB;IACnB,iEAA6B,CAAA;AAC/B,CAAC,EAHW,gCAAgC,KAAhC,gCAAgC,QAG3C;AAWD,2FAA2F;AAC3F,MAAM,CAAN,IAAY,uCAGX;AAHD,WAAY,uCAAuC;IACjD,yBAAyB;IACzB,oFAAyC,CAAA;AAC3C,CAAC,EAHW,uCAAuC,KAAvC,uCAAuC,QAGlD;AAWD,kEAAkE;AAClE,MAAM,CAAN,IAAY,cAqCX;AArCD,WAAY,cAAc;IACxB,qBAAqB;IACrB,mDAAiC,CAAA;IACjC,sBAAsB;IACtB,qDAAmC,CAAA;IACnC,mBAAmB;IACnB,+CAA6B,CAAA;IAC7B,gBAAgB;IAChB,yCAAuB,CAAA;IACvB,eAAe;IACf,uCAAqB,CAAA;IACrB,sBAAsB;IACtB,qDAAmC,CAAA;IACnC,wBAAwB;IACxB,yDAAuC,CAAA;IACvC,mCAAmC;IACnC,+EAA6D,CAAA;IAC7D,wCAAwC;IACxC,yFAAuE,CAAA;IACvE,sBAAsB;IACtB,qDAAmC,CAAA;IACnC,qCAAqC;IACrC,mFAAiE,CAAA;IACjE,4CAA4C;IAC5C,iGAA+E,CAAA;IAC/E,0BAA0B;IAC1B,6DAA2C,CAAA;IAC3C,yBAAyB;IACzB,2DAAyC,CAAA;IACzC,cAAc;IACd,qCAAmB,CAAA;IACnB,oBAAoB;IACpB,iDAA+B,CAAA;IAC/B,eAAe;IACf,uCAAqB,CAAA;IACrB,cAAc;IACd,qCAAmB,CAAA;AACrB,CAAC,EArCW,cAAc,KAAd,cAAc,QAqCzB;AA4BD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBA6BX;AA7BD,WAAY,mBAAmB;IAC7B,qBAAqB;IACrB,wDAAiC,CAAA;IACjC,4BAA4B;IAC5B,sEAA+C,CAAA;IAC/C,4BAA4B;IAC5B,sEAA+C,CAAA;IAC/C,mCAAmC;IACnC,oFAA6D,CAAA;IAC7D,qCAAqC;IACrC,wFAAiE,CAAA;IACjE,wBAAwB;IACxB,8DAAuC,CAAA;IACvC,+BAA+B;IAC/B,4EAAqD,CAAA;IACrD,mBAAmB;IACnB,oDAA6B,CAAA;IAC7B,4BAA4B;IAC5B,sEAA+C,CAAA;IAC/C,sBAAsB;IACtB,0DAAmC,CAAA;IACnC,4BAA4B;IAC5B,sEAA+C,CAAA;IAC/C,2BAA2B;IAC3B,oEAA6C,CAAA;IAC7C,8BAA8B;IAC9B,0EAAmD,CAAA;IACnD,yBAAyB;IACzB,gEAAyC,CAAA;AAC3C,CAAC,EA7BW,mBAAmB,KAAnB,mBAAmB,QA6B9B;AAwBD,sEAAsE;AACtE,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,iBAAiB;IACjB,+CAAyB,CAAA;IACzB,WAAW;IACX,mCAAa,CAAA;AACf,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAYD,2EAA2E;AAC3E,MAAM,CAAN,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IACjC,cAAc;IACd,8CAAmB,CAAA;IACnB,iBAAiB;IACjB,oDAAyB,CAAA;IACzB,cAAc;IACd,8CAAmB,CAAA;AACrB,CAAC,EAPW,uBAAuB,KAAvB,uBAAuB,QAOlC;AAaD,uFAAuF;AACvF,MAAM,CAAN,IAAY,mCAKX;AALD,WAAY,mCAAmC;IAC7C,4BAA4B;IAC5B,sFAA+C,CAAA;IAC/C,sCAAsC;IACtC,0GAAmE,CAAA;AACrE,CAAC,EALW,mCAAmC,KAAnC,mCAAmC,QAK9C;AAYD,iEAAiE;AACjE,MAAM,CAAN,IAAY,aAeX;AAfD,WAAY,aAAa;IACvB,iBAAiB;IACjB,0CAAyB,CAAA;IACzB,cAAc;IACd,oCAAmB,CAAA;IACnB,gBAAgB;IAChB,wCAAuB,CAAA;IACvB,yBAAyB;IACzB,0DAAyC,CAAA;IACzC,aAAa;IACb,kCAAiB,CAAA;IACjB,gBAAgB;IAChB,wCAAuB,CAAA;IACvB,iBAAiB;IACjB,0CAAyB,CAAA;AAC3B,CAAC,EAfW,aAAa,KAAb,aAAa,QAexB;AAiBD,uFAAuF;AACvF,MAAM,CAAN,IAAY,mCAKX;AALD,WAAY,mCAAmC;IAC7C,+BAA+B;IAC/B,4FAAqD,CAAA;IACrD,yCAAyC;IACzC,gHAAyE,CAAA;AAC3E,CAAC,EALW,mCAAmC,KAAnC,mCAAmC,QAK9C;AAYD,kEAAkE;AAClE,MAAM,CAAN,IAAY,cAaX;AAbD,WAAY,cAAc;IACxB,iBAAiB;IACjB,2CAAyB,CAAA;IACzB,cAAc;IACd,qCAAmB,CAAA;IACnB,gBAAgB;IAChB,yCAAuB,CAAA;IACvB,aAAa;IACb,mCAAiB,CAAA;IACjB,gBAAgB;IAChB,yCAAuB,CAAA;IACvB,iBAAiB;IACjB,2CAAyB,CAAA;AAC3B,CAAC,EAbW,cAAc,KAAd,cAAc,QAazB;AAgBD,6DAA6D;AAC7D,MAAM,CAAN,IAAY,SAOX;AAPD,WAAY,SAAS;IACnB,YAAY;IACZ,4BAAe,CAAA;IACf,eAAe;IACf,kCAAqB,CAAA;IACrB,cAAc;IACd,gCAAmB,CAAA;AACrB,CAAC,EAPW,SAAS,KAAT,SAAS,QAOpB;AAaD,wEAAwE;AACxE,MAAM,CAAN,IAAY,oBAOX;AAPD,WAAY,oBAAoB;IAC9B,oQAAoQ;IACpQ,0DAAkC,CAAA;IAClC,uLAAuL;IACvL,6DAAqC,CAAA;IACrC,+LAA+L;IAC/L,uDAA+B,CAAA;AACjC,CAAC,EAPW,oBAAoB,KAApB,oBAAoB,QAO/B;AAaD,0EAA0E;AAC1E,MAAM,CAAN,IAAY,sBASX;AATD,WAAY,sBAAsB;IAChC,WAAW;IACX,uCAAa,CAAA;IACb,mBAAmB;IACnB,uDAA6B,CAAA;IAC7B,wBAAwB;IACxB,iEAAuC,CAAA;IACvC,gBAAgB;IAChB,iDAAuB,CAAA;AACzB,CAAC,EATW,sBAAsB,KAAtB,sBAAsB,QASjC;AAcD,oEAAoE;AACpE,MAAM,CAAN,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,mBAAmB;IACnB,iDAA6B,CAAA;IAC7B,oBAAoB;IACpB,mDAA+B,CAAA;AACjC,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;AAYD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBA+BX;AA/BD,WAAY,mBAAmB;IAC7B,cAAc;IACd,0CAAmB,CAAA;IACnB,eAAe;IACf,4CAAqB,CAAA;IACrB,aAAa;IACb,wCAAiB,CAAA;IACjB,cAAc;IACd,0CAAmB,CAAA;IACnB,YAAY;IACZ,sCAAe,CAAA;IACf,aAAa;IACb,wCAAiB,CAAA;IACjB,aAAa;IACb,wCAAiB,CAAA;IACjB,aAAa;IACb,wCAAiB,CAAA;IACjB,WAAW;IACX,oCAAa,CAAA;IACb,UAAU;IACV,kCAAW,CAAA;IACX,kBAAkB;IAClB,kDAA2B,CAAA;IAC3B,kBAAkB;IAClB,kDAA2B,CAAA;IAC3B,eAAe;IACf,4CAAqB,CAAA;IACrB,mBAAmB;IACnB,oDAA6B,CAAA;IAC7B,mBAAmB;IACnB,oDAA6B,CAAA;AAC/B,CAAC,EA/BW,mBAAmB,KAAnB,mBAAmB,QA+B9B;AAyBD,6EAA6E;AAC7E,MAAM,CAAN,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACnC,oBAAoB;IACpB,4DAA+B,CAAA;IAC/B,cAAc;IACd,gDAAmB,CAAA;AACrB,CAAC,EALW,yBAAyB,KAAzB,yBAAyB,QAKpC;AAYD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,4BAA4B;IAC5B,gDAA6B,CAAA;IAC7B,sBAAsB;IACtB,sCAAmB,CAAA;AACrB,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;AAYD,6EAA6E;AAC7E,MAAM,CAAN,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACnC,UAAU;IACV,wCAAW,CAAA;IACX,SAAS;IACT,sCAAS,CAAA;AACX,CAAC,EALW,yBAAyB,KAAzB,yBAAyB,QAKpC;AAYD,gEAAgE;AAChE,MAAM,CAAN,IAAY,YAWX;AAXD,WAAY,YAAY;IACtB,kBAAkB;IAClB,2CAA2B,CAAA;IAC3B,WAAW;IACX,6BAAa,CAAA;IACb,YAAY;IACZ,+BAAe,CAAA;IACf,WAAW;IACX,6BAAa,CAAA;IACb,UAAU;IACV,2BAAW,CAAA;AACb,CAAC,EAXW,YAAY,KAAZ,YAAY,QAWvB;AAeD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAyDX;AAzDD,WAAY,eAAe;IACzB,kBAAkB;IAClB,8CAA2B,CAAA;IAC3B,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,sBAAsB;IACtB,sDAAmC,CAAA;IACnC,sBAAsB;IACtB,sDAAmC,CAAA;IACnC,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,YAAY;IACZ,kCAAe,CAAA;IACf,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,eAAe;IACf,wCAAqB,CAAA;IACrB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,WAAW;IACX,gCAAa,CAAA;IACb,YAAY;IACZ,kCAAe,CAAA;IACf,UAAU;IACV,8BAAW,CAAA;IACX,WAAW;IACX,gCAAa,CAAA;IACb,YAAY;IACZ,kCAAe,CAAA;IACf,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,aAAa;IACb,oCAAiB,CAAA;IACjB,YAAY;IACZ,kCAAe,CAAA;IACf,WAAW;IACX,gCAAa,CAAA;IACb,WAAW;IACX,gCAAa,CAAA;IACb,aAAa;IACb,oCAAiB,CAAA;IACjB,eAAe;IACf,wCAAqB,CAAA;AACvB,CAAC,EAzDW,eAAe,KAAf,eAAe,QAyD1B;AAsCD,kEAAkE;AAClE,MAAM,CAAN,IAAY,cA6BX;AA7BD,WAAY,cAAc;IACxB,kBAAkB;IAClB,6CAA2B,CAAA;IAC3B,sBAAsB;IACtB,qDAAmC,CAAA;IACnC,wBAAwB;IACxB,yDAAuC,CAAA;IACvC,0BAA0B;IAC1B,6DAA2C,CAAA;IAC3C,0BAA0B;IAC1B,6DAA2C,CAAA;IAC3C,mBAAmB;IACnB,+CAA6B,CAAA;IAC7B,WAAW;IACX,+BAAa,CAAA;IACb,oBAAoB;IACpB,iDAA+B,CAAA;IAC/B,oBAAoB;IACpB,iDAA+B,CAAA;IAC/B,qBAAqB;IACrB,mDAAiC,CAAA;IACjC,qBAAqB;IACrB,mDAAiC,CAAA;IACjC,2BAA2B;IAC3B,+DAA6C,CAAA;IAC7C,gCAAgC;IAChC,yEAAuD,CAAA;IACvD,+BAA+B;IAC/B,uEAAqD,CAAA;AACvD,CAAC,EA7BW,cAAc,KAAd,cAAc,QA6BzB;AAwBD,iEAAiE;AACjE,MAAM,CAAN,IAAY,aA2BX;AA3BD,WAAY,aAAa;IACvB,kBAAkB;IAClB,4CAA2B,CAAA;IAC3B,sBAAsB;IACtB,oDAAmC,CAAA;IACnC,uBAAuB;IACvB,sDAAqC,CAAA;IACrC,sBAAsB;IACtB,oDAAmC,CAAA;IACnC,sBAAsB;IACtB,oDAAmC,CAAA;IACnC,kBAAkB;IAClB,4CAA2B,CAAA;IAC3B,uBAAuB;IACvB,sDAAqC,CAAA;IACrC,uBAAuB;IACvB,sDAAqC,CAAA;IACrC,iBAAiB;IACjB,0CAAyB,CAAA;IACzB,iBAAiB;IACjB,0CAAyB,CAAA;IACzB,iBAAiB;IACjB,0CAAyB,CAAA;IACzB,iBAAiB;IACjB,0CAAyB,CAAA;IACzB,WAAW;IACX,8BAAa,CAAA;AACf,CAAC,EA3BW,aAAa,KAAb,aAAa,QA2BxB;AAuBD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAmCX;AAnCD,WAAY,eAAe;IACzB,kBAAkB;IAClB,8CAA2B,CAAA;IAC3B,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,YAAY;IACZ,kCAAe,CAAA;IACf,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,WAAW;IACX,gCAAa,CAAA;IACb,WAAW;IACX,gCAAa,CAAA;IACb,WAAW;IACX,gCAAa,CAAA;IACb,WAAW;IACX,gCAAa,CAAA;IACb,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,SAAS;IACT,4BAAS,CAAA;AACX,CAAC,EAnCW,eAAe,KAAf,eAAe,QAmC1B;AA2BD,wEAAwE;AACxE,MAAM,CAAN,IAAY,oBA2BX;AA3BD,WAAY,oBAAoB;IAC9B,kBAAkB;IAClB,mDAA2B,CAAA;IAC3B,UAAU;IACV,mCAAW,CAAA;IACX,cAAc;IACd,2CAAmB,CAAA;IACnB,cAAc;IACd,2CAAmB,CAAA;IACnB,cAAc;IACd,2CAAmB,CAAA;IACnB,cAAc;IACd,2CAAmB,CAAA;IACnB,cAAc;IACd,2CAAmB,CAAA;IACnB,WAAW;IACX,qCAAa,CAAA;IACb,eAAe;IACf,6CAAqB,CAAA;IACrB,eAAe;IACf,6CAAqB,CAAA;IACrB,eAAe;IACf,6CAAqB,CAAA;IACrB,eAAe;IACf,6CAAqB,CAAA;IACrB,eAAe;IACf,6CAAqB,CAAA;AACvB,CAAC,EA3BW,oBAAoB,KAApB,oBAAoB,QA2B/B;AAuBD,wEAAwE;AACxE,MAAM,CAAN,IAAY,oBAWX;AAXD,WAAY,oBAAoB;IAC9B,kBAAkB;IAClB,mDAA2B,CAAA;IAC3B,iBAAiB;IACjB,iDAAyB,CAAA;IACzB,aAAa;IACb,yCAAiB,CAAA;IACjB,cAAc;IACd,2CAAmB,CAAA;IACnB,cAAc;IACd,2CAAmB,CAAA;AACrB,CAAC,EAXW,oBAAoB,KAApB,oBAAoB,QAW/B;AAeD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAiCX;AAjCD,WAAY,eAAe;IACzB,kBAAkB;IAClB,8CAA2B,CAAA;IAC3B,eAAe;IACf,wCAAqB,CAAA;IACrB,WAAW;IACX,gCAAa,CAAA;IACb,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,aAAa;IACb,oCAAiB,CAAA;IACjB,gBAAgB;IAChB,0CAAuB,CAAA;IACvB,UAAU;IACV,8BAAW,CAAA;IACX,YAAY;IACZ,kCAAe,CAAA;IACf,YAAY;IACZ,kCAAe,CAAA;IACf,YAAY;IACZ,kCAAe,CAAA;IACf,kBAAkB;IAClB,8CAA2B,CAAA;IAC3B,qBAAqB;IACrB,oDAAiC,CAAA;IACjC,iBAAiB;IACjB,4CAAyB,CAAA;IACzB,2BAA2B;IAC3B,gEAA6C,CAAA;IAC7C,YAAY;IACZ,kCAAe,CAAA;IACf,WAAW;IACX,gCAAa,CAAA;AACf,CAAC,EAjCW,eAAe,KAAf,eAAe,QAiC1B;AA0BD,wEAAwE;AACxE,MAAM,CAAN,IAAY,oBAWX;AAXD,WAAY,oBAAoB;IAC9B,WAAW;IACX,qCAAa,CAAA;IACb,WAAW;IACX,qCAAa,CAAA;IACb,eAAe;IACf,6CAAqB,CAAA;IACrB,eAAe;IACf,6CAAqB,CAAA;IACrB,UAAU;IACV,mCAAW,CAAA;AACb,CAAC,EAXW,oBAAoB,KAApB,oBAAoB,QAW/B;AAeD,yEAAyE;AACzE,MAAM,CAAN,IAAY,qBAqCX;AArCD,WAAY,qBAAqB;IAC/B,kBAAkB;IAClB,oDAA2B,CAAA;IAC3B,aAAa;IACb,0CAAiB,CAAA;IACjB,kBAAkB;IAClB,oDAA2B,CAAA;IAC3B,aAAa;IACb,0CAAiB,CAAA;IACjB,yBAAyB;IACzB,kEAAyC,CAAA;IACzC,eAAe;IACf,8CAAqB,CAAA;IACrB,eAAe;IACf,8CAAqB,CAAA;IACrB,YAAY;IACZ,wCAAe,CAAA;IACf,YAAY;IACZ,wCAAe,CAAA;IACf,gBAAgB;IAChB,gDAAuB,CAAA;IACvB,YAAY;IACZ,wCAAe,CAAA;IACf,UAAU;IACV,oCAAW,CAAA;IACX,WAAW;IACX,sCAAa,CAAA;IACb,YAAY;IACZ,wCAAe,CAAA;IACf,iBAAiB;IACjB,kDAAyB,CAAA;IACzB,mBAAmB;IACnB,sDAA6B,CAAA;IAC7B,UAAU;IACV,oCAAW,CAAA;IACX,WAAW;IACX,sCAAa,CAAA;AACf,CAAC,EArCW,qBAAqB,KAArB,qBAAqB,QAqChC;AA4BD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAaX;AAbD,WAAY,eAAe;IACzB,cAAc;IACd,sCAAmB,CAAA;IACnB,cAAc;IACd,sCAAmB,CAAA;IACnB,YAAY;IACZ,kCAAe,CAAA;IACf,eAAe;IACf,wCAAqB,CAAA;IACrB,cAAc;IACd,sCAAmB,CAAA;IACnB,kBAAkB;IAClB,8CAA2B,CAAA;AAC7B,CAAC,EAbW,eAAe,KAAf,eAAe,QAa1B;AAgBD,mEAAmE;AACnE,MAAM,CAAN,IAAY,eAOX;AAPD,WAAY,eAAe;IACzB,cAAc;IACd,sCAAmB,CAAA;IACnB,UAAU;IACV,8BAAW,CAAA;IACX,YAAY;IACZ,kCAAe,CAAA;AACjB,CAAC,EAPW,eAAe,KAAf,eAAe,QAO1B;AAaD,kEAAkE;AAClE,MAAM,CAAN,IAAY,cAqBX;AArBD,WAAY,cAAc;IACxB,aAAa;IACb,mCAAiB,CAAA;IACjB,YAAY;IACZ,iCAAe,CAAA;IACf,aAAa;IACb,mCAAiB,CAAA;IACjB,aAAa;IACb,mCAAiB,CAAA;IACjB,aAAa;IACb,mCAAiB,CAAA;IACjB,WAAW;IACX,+BAAa,CAAA;IACb,UAAU;IACV,6BAAW,CAAA;IACX,kBAAkB;IAClB,6CAA2B,CAAA;IAC3B,kBAAkB;IAClB,6CAA2B,CAAA;IAC3B,eAAe;IACf,uCAAqB,CAAA;AACvB,CAAC,EArBW,cAAc,KAAd,cAAc,QAqBzB;AAoBD,gFAAgF;AAChF,MAAM,CAAN,IAAY,4BAiBX;AAjBD,WAAY,4BAA4B;IACtC,cAAc;IACd,mDAAmB,CAAA;IACnB,iBAAiB;IACjB,yDAAyB,CAAA;IACzB,YAAY;IACZ,+CAAe,CAAA;IACf,WAAW;IACX,6CAAa,CAAA;IACb,wBAAwB;IACxB,uEAAuC,CAAA;IACvC,kBAAkB;IAClB,2DAA2B,CAAA;IAC3B,UAAU;IACV,2CAAW,CAAA;IACX,cAAc;IACd,mDAAmB,CAAA;AACrB,CAAC,EAjBW,4BAA4B,KAA5B,4BAA4B,QAiBvC;AAkBD,8EAA8E;AAC9E,MAAM,CAAN,IAAY,0BASX;AATD,WAAY,0BAA0B;IACpC,cAAc;IACd,iDAAmB,CAAA;IACnB,UAAU;IACV,yCAAW,CAAA;IACX,gBAAgB;IAChB,qDAAuB,CAAA;IACvB,WAAW;IACX,2CAAa,CAAA;AACf,CAAC,EATW,0BAA0B,KAA1B,0BAA0B,QASrC;AAcD,sEAAsE;AACtE,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,YAAY;IACZ,qCAAe,CAAA;IACf,iBAAiB;IACjB,+CAAyB,CAAA;AAC3B,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type AnalyzeConversationTaskUnion =\n  | AnalyzeConversationTask\n  | ConversationalTask;\nexport type AnalyzeConversationTaskResultUnion =\n  | AnalyzeConversationTaskResult\n  | ConversationalTaskResult;\nexport type ConversationUnion =\n  | Conversation\n  | TextConversation\n  | TranscriptConversation;\nexport type AnalysisParametersUnion =\n  | AnalysisParameters\n  | LuisParameters\n  | ConversationParameters\n  | QuestionAnsweringParameters;\nexport type BasePredictionUnion =\n  | BasePrediction\n  | ConversationPrediction\n  | OrchestrationPrediction;\nexport type BaseResolutionUnion =\n  | BaseResolution\n  | AgeResolution\n  | VolumeResolution\n  | SpeedResolution\n  | AreaResolution\n  | LengthResolution\n  | InformationResolution\n  | TemperatureResolution\n  | WeightResolution\n  | CurrencyResolution\n  | BooleanResolution\n  | DateTimeResolution\n  | NumberResolution\n  | OrdinalResolution\n  | TemporalSpanResolution\n  | NumericRangeResolution;\nexport type BaseExtraInformationUnion =\n  | BaseExtraInformation\n  | EntitySubtype\n  | ListKey;\nexport type TargetIntentResultUnion =\n  | TargetIntentResult\n  | NoneLinkedTargetIntentResult\n  | ConversationTargetIntentResult\n  | LuisTargetIntentResult\n  | QuestionAnsweringTargetIntentResult;\nexport type AnalyzeConversationLROTaskUnion =\n  | AnalyzeConversationLROTask\n  | AnalyzeConversationPIITask\n  | AnalyzeConversationSummarizationTask;\nexport type AnalyzeConversationJobResultUnion =\n  | AnalyzeConversationJobResult\n  | AnalyzeConversationPIIResult\n  | AnalyzeConversationSummarizationResult;\n\n/** The base class of a conversation input task. */\nexport interface AnalyzeConversationTask {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Conversation\";\n}\n\n/** The base class of a conversation task result. */\nexport interface AnalyzeConversationTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"ConversationResult\";\n}\n\n/** Error response. */\nexport interface ErrorResponse {\n  /** The error object. */\n  error: ErrorModel;\n}\n\n/** The error object. */\nexport interface ErrorModel {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** One of a server-defined set of error codes. */\n  code: ErrorCode;\n  /** A human-readable representation of the error. */\n  message: string;\n  /** The target of the error. */\n  target?: string;\n  /** An array of details about specific errors that led to this reported error. */\n  details?: ErrorModel[];\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerErrorModel;\n}\n\n/** An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses. */\nexport interface InnerErrorModel {\n  /** One of a server-defined set of error codes. */\n  code: InnerErrorCode;\n  /** Error message. */\n  message: string;\n  /** Error details. */\n  details?: { [propertyName: string]: string };\n  /** Error target. */\n  target?: string;\n  /** An object containing more specific information than the current object about the error. */\n  innererror?: InnerErrorModel;\n}\n\nexport interface AnalyzeConversationJobsInput {\n  /** Optional display name for the analysis job. */\n  displayName?: string;\n  analysisInput: MultiLanguageConversationAnalysisInput;\n  /** The set of tasks to execute on the input conversation. */\n  tasks: AnalyzeConversationLROTaskUnion[];\n}\n\nexport interface MultiLanguageConversationAnalysisInput {\n  conversations: ConversationUnion[];\n}\n\n/** A complete ordered set of utterances (spoken or written), by one or more speakers to be used for analysis. */\nexport interface Conversation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  modality: \"text\" | \"transcript\";\n  /** Unique identifier for the conversation. */\n  id: string;\n  /** The language of the conversation item in BCP-47 format. */\n  language: string;\n  /** Enumeration of supported conversational domains. */\n  domain?: ConversationDomain;\n}\n\n/** Base task object. */\nexport interface TaskIdentifier {\n  taskName?: string;\n}\n\nexport interface JobStateAutoGenerated {\n  displayName?: string;\n  createdDateTime: Date;\n  expirationDateTime?: Date;\n  jobId: string;\n  lastUpdatedDateTime: Date;\n  status: JobState;\n  errors?: ErrorModel[];\n  nextLink?: string;\n}\n\n/** Contains the state for the tasks being executed as part of the analyze conversation job submitted. */\nexport interface ConversationTasksState {\n  tasks: ConversationTasksStateTasks;\n}\n\nexport interface ConversationTasksStateTasks {\n  /** Count of tasks completed successfully. */\n  completed: number;\n  /** Count of tasks that failed. */\n  failed: number;\n  /** Count of tasks in progress currently. */\n  inProgress: number;\n  /** Total count of tasks submitted as part of the job. */\n  total: number;\n  /** List of results from tasks (if available). */\n  items?: AnalyzeConversationJobResultUnion[];\n}\n\n/** Returns the current state of the task. */\nexport interface TaskStateAutoGenerated {\n  /** The last updated time in UTC for the task. */\n  lastUpdateDateTime: Date;\n  /** The status of the task at the mentioned last update time. */\n  status: TaskState;\n}\n\n/** Contains the statistics for the job submitted. */\nexport interface AnalyzeConversationJobStatistics {\n  /** if showStats=true was specified in the request this field will contain information about the request payload. */\n  statistics?: ConversationRequestStatistics;\n}\n\n/** if showStats=true was specified in the request this field will contain information about the request payload. */\nexport interface RequestStatistics {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Number of transactions for the request. */\n  transactionsCount: number;\n}\n\n/** The input ConversationItem and its optional parameters */\nexport interface ConversationAnalysisOptions {\n  /** The abstract base for a user input formatted conversation (e.g., Text, Transcript). */\n  conversationItem: ConversationItemBase;\n}\n\n/** The abstract base for a user input formatted conversation (e.g., Text, Transcript). */\nexport interface ConversationItemBase {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** The ID of a conversation item. */\n  id: string;\n  /** The participant ID of a conversation item. */\n  participantId: string;\n  /** The override language of a conversation item in BCP 47 language representation. */\n  language?: string;\n  /** Enumeration of supported conversational modalities. */\n  modality?: InputModality;\n  /** The role of the participant. */\n  role?: Role;\n}\n\n/** Input parameters necessary for a Conversation task. */\nexport interface ConversationTaskParameters {\n  /** The name of the project to use. */\n  projectName: string;\n  /** The name of the deployment to use. */\n  deploymentName: string;\n  /** If true, the service will return more detailed information in the response. */\n  verbose?: boolean;\n  /** If true, the service will keep the query for further review. */\n  isLoggingEnabled?: boolean;\n  /** Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets. */\n  stringIndexType?: StringIndexType;\n  /** The name of a target project to forward the request to. */\n  directTarget?: string;\n  /** A dictionary representing the parameters for each target project. */\n  targetProjectParameters?: { [propertyName: string]: AnalysisParametersUnion };\n}\n\n/** This is the parameter set of either the Orchestration project itself or one of the target services. */\nexport interface AnalysisParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"Luis\" | \"Conversation\" | \"QuestionAnswering\";\n  /** The API version to use when call a specific target service. */\n  apiVersion?: string;\n}\n\n/** Represents a conversation analysis response. */\nexport interface AnalyzeConversationResult {\n  /** The conversation utterance given by the caller. */\n  query: string;\n  /** The system detected language for the query in BCP 47 language representation.. */\n  detectedLanguage?: string;\n  /** The prediction result of a conversation project. */\n  prediction: BasePredictionUnion;\n}\n\n/** This is the base class of prediction */\nexport interface BasePrediction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  projectKind: \"Conversation\" | \"Orchestration\";\n  /** The intent with the highest score. */\n  topIntent?: string;\n}\n\n/** The response returned by a Conversation project. */\nexport interface ConversationResult {\n  /** The same query given in request. */\n  query: string;\n  /** The detected language from the query in BCP 47 language representation.. */\n  detectedLanguage?: string;\n  /** The predicted result for the query. */\n  prediction?: ConversationPrediction;\n}\n\n/** The intent classification result of a Conversation project. */\nexport interface ConversationIntent {\n  /** A predicted class. */\n  category: string;\n  /** The confidence score of the class from 0.0 to 1.0. */\n  confidence: number;\n}\n\n/** The entity extraction result of a Conversation project. */\nexport interface ConversationEntity {\n  /** The entity category. */\n  category: string;\n  /** The predicted entity text. */\n  text: string;\n  /** The starting index of this entity in the query. */\n  offset: number;\n  /** The length of the text. */\n  length: number;\n  /** The entity confidence score. */\n  confidence: number;\n  /** The collection of entity resolution objects. */\n  resolutions?: BaseResolutionUnion[];\n  /** The collection of entity extra information objects. */\n  extraInformation?: BaseExtraInformationUnion[];\n}\n\n/** The abstract base class for entity resolutions. */\nexport interface BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind:\n    | \"Age\"\n    | \"Volume\"\n    | \"Speed\"\n    | \"Area\"\n    | \"Length\"\n    | \"Information\"\n    | \"Temperature\"\n    | \"Weight\"\n    | \"Currency\"\n    | \"Boolean\"\n    | \"DateTime\"\n    | \"Number\"\n    | \"Ordinal\"\n    | \"TemporalSpan\"\n    | \"NumericRange\";\n}\n\n/** The abstract base object for entity extra information. */\nexport interface BaseExtraInformation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  extraInformationKind: \"EntitySubtype\" | \"ListKey\";\n}\n\n/** This is the base class of an intent prediction */\nexport interface TargetIntentResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind:\n    | \"NonLinked\"\n    | \"Conversation\"\n    | \"Luis\"\n    | \"QuestionAnswering\";\n  /** The API version used to call a target service. */\n  apiVersion?: string;\n  /** The prediction score and it ranges from 0.0 to 1.0. */\n  confidence: number;\n}\n\n/** This customizes how the service calls LUIS Generally Available projects. */\nexport interface LuisCallingOptions {\n  /** Enable verbose response. */\n  verbose?: boolean;\n  /** Save log to add in training utterances later. */\n  log?: boolean;\n  /** Set true to show all intents. */\n  showAllIntents?: boolean;\n  /** The timezone offset for the location of the request. */\n  timezoneOffset?: number;\n  /** Enable spell checking. */\n  spellCheck?: boolean;\n  /** The subscription key to use when enabling Bing spell check */\n  bingSpellCheckSubscriptionKey?: string;\n}\n\n/** The option to set to call a Conversation project. */\nexport interface ConversationCallingOptions {\n  /** The language of the query in BCP 47 language representation.. */\n  language?: string;\n  /** If true, the service will return more detailed information. */\n  verbose?: boolean;\n  /** If true, the query will be saved for customers to further review in authoring, to improve the model quality. */\n  isLoggingEnabled?: boolean;\n}\n\n/** Parameters to query a knowledge base. */\nexport interface AnswersOptions {\n  /** Exact QnA ID to fetch from the knowledge base, this field takes priority over question. */\n  qnaId?: number;\n  /** User question to query against the knowledge base. */\n  question?: string;\n  /** Max number of answers to be returned for the question. */\n  top?: number;\n  /** Unique identifier for the user. */\n  userId?: string;\n  /** Minimum threshold score for answers, value ranges from 0 to 1. */\n  confidenceThreshold?: number;\n  /** Context object with previous QnA's information. */\n  answerContext?: KnowledgeBaseAnswerContext;\n  /** Type of ranker to be used. */\n  rankerKind?: RankerKind;\n  /** Filter QnAs based on given metadata list and knowledge base sources. */\n  filters?: QueryFilters;\n  /** To configure Answer span prediction feature. */\n  shortAnswerOptions?: ShortAnswerOptions;\n  /** (Optional) Flag to enable Query over Unstructured Sources. */\n  includeUnstructuredSources?: boolean;\n}\n\n/** Context object with previous QnA's information. */\nexport interface KnowledgeBaseAnswerContext {\n  /** Previous turn top answer result QnA ID. */\n  previousQnaId: number;\n  /** Previous user query. */\n  previousQuestion?: string;\n}\n\n/** filters over knowledge base. */\nexport interface QueryFilters {\n  /** Find QnAs that are associated with the given list of metadata. */\n  metadataFilter?: MetadataFilter;\n  /** Find QnAs that are associated with any of the given list of sources in knowledge base. */\n  sourceFilter?: string[];\n  /** Logical operation used to join metadata filter with source filter. */\n  logicalOperation?: LogicalOperationKind;\n}\n\n/** Find QnAs that are associated with the given list of metadata. */\nexport interface MetadataFilter {\n  metadata?: MetadataRecord[];\n  /** Operation used to join metadata filters. */\n  logicalOperation?: LogicalOperationKind;\n}\n\n/** Object to provide the key value pair for each metadata. */\nexport interface MetadataRecord {\n  /** Metadata Key from Metadata dictionary used in the QnA. */\n  key: string;\n  /** Metadata Value from Metadata dictionary used in the QnA. */\n  value: string;\n}\n\n/** To configure Answer span prediction feature. */\nexport interface ShortAnswerOptions {\n  /** Enable or disable Answer Span prediction. */\n  enable: true;\n  /** Minimum threshold score required to include an answer span, value ranges from 0 to 1. */\n  confidenceThreshold?: number;\n  /** Number of Top answers to be considered for span prediction from 1 to 10. */\n  top?: number;\n}\n\n/** Represents resolutions for quantities. */\nexport interface QuantityResolution {\n  /** The numeric value that the extracted text denotes. */\n  value: number;\n}\n\n/** Represents List of Question Answers. */\nexport interface AnswersResult {\n  /** Represents Answer Result list. */\n  answers?: KnowledgeBaseAnswer[];\n}\n\n/** Represents knowledge base answer. */\nexport interface KnowledgeBaseAnswer {\n  /** List of questions associated with the answer. */\n  questions?: string[];\n  /** Answer text. */\n  answer?: string;\n  /** Answer confidence score, value ranges from 0 to 1. */\n  confidence?: number;\n  /** ID of the QnA result. */\n  qnaId?: number;\n  /** Source of QnA result. */\n  source?: string;\n  /** Metadata associated with the answer, useful to categorize or filter question answers. */\n  metadata?: { [propertyName: string]: string };\n  /** Dialog associated with Answer. */\n  dialog?: KnowledgeBaseAnswerDialog;\n  /** Answer span object of QnA with respect to user's question. */\n  shortAnswer?: AnswerSpan;\n}\n\n/** Dialog associated with Answer. */\nexport interface KnowledgeBaseAnswerDialog {\n  /** To mark if a prompt is relevant only with a previous question or not. If true, do not include this QnA as search result for queries without context; otherwise, if false, ignores context and includes this QnA in search result. */\n  isContextOnly?: boolean;\n  /** List of prompts associated with the answer. */\n  prompts?: KnowledgeBaseAnswerPrompt[];\n}\n\n/** Prompt for an answer. */\nexport interface KnowledgeBaseAnswerPrompt {\n  /** Index of the prompt - used in ordering of the prompts. */\n  displayOrder?: number;\n  /** QnA ID corresponding to the prompt. */\n  qnaId?: number;\n  /** Text displayed to represent a follow up question prompt. */\n  displayText?: string;\n}\n\n/** Answer span object of QnA. */\nexport interface AnswerSpan {\n  /** Predicted text of answer span. */\n  text?: string;\n  /** Predicted score of answer span, value ranges from 0 to 1. */\n  confidence?: number;\n  /** The answer span offset from the start of answer. */\n  offset?: number;\n  /** The length of the answer span. */\n  length?: number;\n}\n\n/** Base parameters object for a text analysis task. */\nexport interface TaskParameters {\n  loggingOptOut?: boolean;\n}\n\nexport interface ConversationPIIItemResult {\n  id: string;\n  /** The transcript content response generated by the service with all necessary personally identifiable information redacted. */\n  redactedContent: RedactedTranscriptContent;\n  entities: Entity[];\n}\n\n/** The transcript content response generated by the service with all necessary personally identifiable information redacted. */\nexport interface RedactedTranscriptContent {\n  /** The redacted output for inverse text normalized format input. */\n  itn?: string;\n  /** The redacted output for masked inverse text normalized format input. */\n  maskedItn?: string;\n  /** The redacted output for text (Microsoft's Speech to Text 'display') format input. */\n  text?: string;\n  /** The redacted output for lexical format input. */\n  lexical?: string;\n  /** The list of redacted audio segments. */\n  audioTimings?: AudioTiming[];\n}\n\n/** The audio timing information. */\nexport interface AudioTiming {\n  /** Offset from start of speech audio, in ticks. 1 tick = 100 ns. */\n  offset?: number;\n  /** Duration of word articulation, in ticks. 1 tick = 100 ns. */\n  duration?: number;\n}\n\nexport interface Entity {\n  /** Entity text as appears in the request. */\n  text: string;\n  /** Entity type. */\n  category: string;\n  /** (Optional) Entity sub type. */\n  subcategory?: string;\n  /** Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. */\n  offset: number;\n  /** Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. */\n  length: number;\n  /** Confidence score between 0 and 1 of the extracted entity. */\n  confidenceScore: number;\n}\n\n/** The result from PII detection and redaction operation for each conversation. */\nexport interface ConversationPIIResult {\n  /** Enumeration of PII detection and redaction operation results for all the conversation items in a conversation. */\n  conversationItems: ConversationPIIItemResult[];\n}\n\n/** Shared attributes for all conversational task results. */\nexport interface ConversationResultBase {\n  /** Unique, non-empty conversation identifier. */\n  id: string;\n  /** Warnings encountered while processing document. */\n  warnings: InputWarning[];\n  /** If showStats=true was specified in the request this field will contain information about the conversation payload. */\n  statistics?: ConversationStatistics;\n}\n\n/** Contains details of warnings encountered during a job execution. */\nexport interface InputWarning {\n  /** Warning code. */\n  code: string;\n  /** Warning message. */\n  message: string;\n  /** A JSON pointer reference indicating the target object. */\n  targetRef?: string;\n}\n\n/** If showStats=true was specified in the request this field will contain information about the conversation payload. */\nexport interface ConversationStatistics {\n  /** Number of text units for the request. */\n  transactionsCount: number;\n}\n\nexport interface PreBuiltResult {\n  /** Errors by document id. */\n  errors: InputError[];\n  /** if showStats=true was specified in the request this field will contain information about the request payload. */\n  statistics?: RequestStatistics;\n  /** This field indicates which model is used for scoring. */\n  modelVersion: string;\n}\n\n/** Contains details of errors encountered during a job execution. */\nexport interface InputError {\n  /** The ID of the input. */\n  id: string;\n  /** Error encountered. */\n  error: ErrorModel;\n}\n\nexport interface ConversationsSummaryResult {\n  summaries: ConversationsSummaryResultSummariesItem[];\n}\n\nexport interface SummaryResultItem {\n  aspect: string;\n  text: string;\n}\n\n/** The input for a custom conversation task. */\nexport interface ConversationalTask extends AnalyzeConversationTask {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"Conversation\";\n  /** The input ConversationItem and its optional parameters */\n  analysisInput: ConversationAnalysisOptions;\n  /** Input parameters necessary for a Conversation task. */\n  parameters: ConversationTaskParameters;\n}\n\n/** The results of a Conversation task. */\nexport interface ConversationalTaskResult\n  extends AnalyzeConversationTaskResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  kind: \"ConversationResult\";\n  /** Represents a conversation analysis response. */\n  result: AnalyzeConversationResult;\n}\n\nexport interface TextConversation extends Conversation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  modality: \"text\";\n  /** Ordered list of text conversation items in the conversation. */\n  conversationItems: TextConversationItem[];\n}\n\nexport interface TranscriptConversation extends Conversation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  modality: \"transcript\";\n  /** Ordered list of transcript conversation items in the conversation. */\n  conversationItems: TranscriptConversationItem[];\n}\n\n/** The base class for an long running conversation input task. */\nexport interface AnalyzeConversationLROTask extends TaskIdentifier {\n  /** Enumeration of supported analysis tasks on a collection of conversations. */\n  kind: AnalyzeConversationLROTaskKind;\n}\n\n/** Container for results for all tasks in the conversation job. */\nexport interface AnalyzeConversationJobResult\n  extends TaskStateAutoGenerated,\n    TaskIdentifier {\n  /** Enumeration of supported Conversation Analysis task results. */\n  kind: AnalyzeConversationResultsKind;\n}\n\n/** Contains the status of the analyze conversations job submitted along with related statistics. */\nexport interface AnalyzeConversationJobState\n  extends JobStateAutoGenerated,\n    ConversationTasksState,\n    AnalyzeConversationJobStatistics {}\n\n/** if showStats=true was specified in the request this field will contain information about the request payload. */\nexport interface ConversationRequestStatistics extends RequestStatistics {\n  /** Number of conversations submitted in the request. */\n  conversationsCount: number;\n  /** Number of conversations documents. This excludes empty, over-size limit or non-supported languages documents. */\n  validConversationsCount: number;\n  /** Number of invalid documents. This includes empty, over-size limit or non-supported languages documents. */\n  erroneousConversationsCount: number;\n}\n\n/** The text modality of an input conversation. */\nexport interface TextConversationItem extends ConversationItemBase {\n  /** The text input */\n  text: string;\n}\n\n/** Additional properties for supporting transcript conversation. */\nexport interface TranscriptConversationItem extends ConversationItemBase {\n  /** Inverse Text Normalization representation of input. The inverse-text-normalized form is the recognized text from Microsoft’s Speech to Text API, with phone numbers, numbers, abbreviations, and other transformations applied. */\n  itn?: string;\n  /** The Inverse Text Normalized format with profanity masking applied. */\n  maskedItn?: string;\n  /** The display form of the recognized text from speech to text API, with punctuation and capitalization added. */\n  text?: string;\n  /** The lexical form of the recognized text from speech to text API with the actual words recognized. */\n  lexical?: string;\n  /** The list of word level audio timing information */\n  audioTimings?: WordLevelTiming[];\n}\n\n/** This is a set of request parameters for LUIS Generally Available projects. */\nexport interface LuisParameters extends AnalysisParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"Luis\";\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** The utterance to predict. */\n  query?: string;\n  /** This customizes how the service calls LUIS Generally Available projects. */\n  callingOptions?: LuisCallingOptions;\n}\n\n/** This is a set of request parameters for Customized Conversation projects. */\nexport interface ConversationParameters extends AnalysisParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"Conversation\";\n  /** The option to set to call a Conversation project. */\n  callingOptions?: ConversationCallingOptions;\n}\n\n/** This is a set of request parameters for Question Answering knowledge bases. */\nexport interface QuestionAnsweringParameters extends AnalysisParameters {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"QuestionAnswering\";\n  /** The options sent to a Question Answering KB. */\n  callingOptions?: AnswersOptions;\n}\n\n/** Represents the prediction section of a Conversation project. */\nexport interface ConversationPrediction extends BasePrediction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  projectKind: \"Conversation\";\n  /** The intent classification results. */\n  intents: ConversationIntent[];\n  /** The entity extraction results. */\n  entities: ConversationEntity[];\n}\n\n/** This represents the prediction result of an Orchestration project. */\nexport interface OrchestrationPrediction extends BasePrediction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  projectKind: \"Orchestration\";\n  /** A dictionary that contains all intents. A key is an intent name and a value is its confidence score and target type. The top intent's value also contains the actual response from the target project. */\n  intents: { [propertyName: string]: TargetIntentResultUnion };\n}\n\n/** Represents the Age entity resolution model. */\nexport interface AgeResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Age\";\n  /** The Age Unit of measurement */\n  unit: AgeUnit;\n}\n\n/** Represents the volume entity resolution model. */\nexport interface VolumeResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Volume\";\n  /** The Volume Unit of measurement */\n  unit: VolumeUnit;\n}\n\n/** Represents the speed entity resolution model. */\nexport interface SpeedResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Speed\";\n  /** The speed Unit of measurement */\n  unit: SpeedUnit;\n}\n\n/** Represents the area entity resolution model. */\nexport interface AreaResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Area\";\n  /** The area Unit of measurement */\n  unit: AreaUnit;\n}\n\n/** Represents the length entity resolution model. */\nexport interface LengthResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Length\";\n  /** The length Unit of measurement */\n  unit: LengthUnit;\n}\n\n/** Represents the information (data) entity resolution model. */\nexport interface InformationResolution\n  extends BaseResolution,\n    QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Information\";\n  /** The information (data) Unit of measurement. */\n  unit: InformationUnit;\n}\n\n/** Represents the temperature entity resolution model. */\nexport interface TemperatureResolution\n  extends BaseResolution,\n    QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Temperature\";\n  /** The temperature Unit of measurement. */\n  unit: TemperatureUnit;\n}\n\n/** Represents the weight entity resolution model. */\nexport interface WeightResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Weight\";\n  /** The weight Unit of measurement. */\n  unit: WeightUnit;\n}\n\n/** Represents the currency entity resolution model. */\nexport interface CurrencyResolution extends BaseResolution, QuantityResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Currency\";\n  /** The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name. */\n  iso4217?: string;\n  /** The unit of the amount captured in the extracted entity */\n  unit: string;\n}\n\n/** A resolution for boolean expressions */\nexport interface BooleanResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Boolean\";\n  value: boolean;\n}\n\n/** A resolution for datetime entity instances. */\nexport interface DateTimeResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"DateTime\";\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  timex: string;\n  /** The DateTime SubKind */\n  dateTimeSubKind: DateTimeSubKind;\n  /** The actual time that the extracted text denote. */\n  value: string;\n  /** An optional modifier of a date/time instance. */\n  modifier?: TemporalModifier;\n}\n\n/** A resolution for numeric entity instances. */\nexport interface NumberResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Number\";\n  /** The type of the extracted number entity. */\n  numberKind: NumberKind;\n  /** A numeric representation of what the extracted text denotes. */\n  value: string;\n}\n\n/** A resolution for ordinal numbers entity instances. */\nexport interface OrdinalResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"Ordinal\";\n  /** The offset With respect to the reference (e.g., offset = -1 in \"show me the second to last\" */\n  offset: string;\n  /** The reference point that the ordinal number denotes. */\n  relativeTo: RelativeTo;\n  /** A simple arithmetic expression that the ordinal denotes. */\n  value: string;\n}\n\n/** represents the resolution of a date and/or time span. */\nexport interface TemporalSpanResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"TemporalSpan\";\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  begin?: string;\n  /** An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml) */\n  end?: string;\n  /** An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations) */\n  duration?: string;\n  /** An optional modifier of a date/time instance. */\n  modifier?: TemporalModifier;\n}\n\n/** represents the resolution of numeric intervals. */\nexport interface NumericRangeResolution extends BaseResolution {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  resolutionKind: \"NumericRange\";\n  /** The kind of range that the resolution object represents. */\n  rangeKind: RangeKind;\n  /** The beginning value of  the interval. */\n  minimum: number;\n  /** The ending value of the interval. */\n  maximum: number;\n}\n\n/** The concrete entity Subtype model of extra information. */\nexport interface EntitySubtype extends BaseExtraInformation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  extraInformationKind: \"EntitySubtype\";\n  /** The Subtype of an extracted entity type. */\n  value?: string;\n}\n\n/** The list key extra data kind. */\nexport interface ListKey extends BaseExtraInformation {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  extraInformationKind: \"ListKey\";\n  /** The canonical form of the extracted entity. */\n  key?: string;\n}\n\n/** A wrap up of non-linked intent response. */\nexport interface NoneLinkedTargetIntentResult extends TargetIntentResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"NonLinked\";\n  /** The actual response from a Conversation project. */\n  result?: ConversationResult;\n}\n\n/** A wrap up of Conversation project response. */\nexport interface ConversationTargetIntentResult extends TargetIntentResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"Conversation\";\n  /** The actual response from a Conversation project. */\n  result?: ConversationResult;\n}\n\n/** It is a wrap up of LUIS Generally Available response. */\nexport interface LuisTargetIntentResult extends TargetIntentResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"Luis\";\n  /** The actual response from a LUIS Generally Available application. */\n  result?: Record<string, unknown>;\n}\n\n/** It is a wrap up a Question Answering KB response. */\nexport interface QuestionAnsweringTargetIntentResult\n  extends TargetIntentResult {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  targetProjectKind: \"QuestionAnswering\";\n  /** The generated answer by a Question Answering KB. */\n  result?: AnswersResult;\n}\n\n/** Parameters object for a text analysis task using pre-built models. */\nexport interface PreBuiltTaskParameters extends TaskParameters {\n  modelVersion?: string;\n}\n\n/** Word level timing information generated by the speech to text API. The words in this object should have 1:1 correspondence with the 'lexical' input to allow for audio redaction. */\nexport interface WordLevelTiming extends AudioTiming {\n  /** The word recognized. */\n  word?: string;\n}\n\nexport interface ConversationPIIResultsConversationsItem\n  extends ConversationPIIResult,\n    ConversationResultBase {}\n\nexport interface SummaryResultConversationsItem\n  extends ConversationsSummaryResult,\n    ConversationResultBase {}\n\n/** The result from PII detection and redaction operation for each conversation. */\nexport interface ConversationPIIResults extends PreBuiltResult {\n  conversations: ConversationPIIResultsConversationsItem[];\n}\n\nexport interface SummaryResult extends PreBuiltResult {\n  conversations: SummaryResultConversationsItem[];\n}\n\nexport interface ConversationsSummaryResultSummariesItem\n  extends SummaryResultItem {}\n\n/** Task definition for a PII redaction in conversations. */\nexport interface AnalyzeConversationPIITask extends AnalyzeConversationLROTask {\n  /** Supported parameters for a Conversational PII detection and redaction task. */\n  parameters?: ConversationPIITaskParameters;\n}\n\n/** Task definition for conversational summarization. */\nexport interface AnalyzeConversationSummarizationTask\n  extends AnalyzeConversationLROTask {\n  /** Supported parameters for an conversational summarization task. */\n  parameters?: ConversationSummarizationTaskParameters;\n}\n\n/** Result from the personally identifiable information detection and redaction operation performed on a list of conversations. */\nexport interface AnalyzeConversationPIIResult\n  extends AnalyzeConversationJobResult {\n  /** The result from PII detection and redaction operation for each conversation. */\n  results: ConversationPIIResults;\n}\n\n/** Result for the summarization task on the conversation. */\nexport interface AnalyzeConversationSummarizationResult\n  extends AnalyzeConversationJobResult {\n  results: SummaryResult;\n}\n\n/** Supported parameters for a Conversational PII detection and redaction task. */\nexport interface ConversationPIITaskParameters extends PreBuiltTaskParameters {\n  /** Describes the PII categories to return for detection. If not provided, 'default' categories will be returned which will vary with the language. */\n  piiCategories?: ConversationPIICategory[];\n  /** Flag to indicate if audio redaction is requested. By default audio redaction will not be performed. */\n  includeAudioRedaction?: boolean;\n  /** For transcript conversations, this parameter provides information regarding which content type (ITN, Text, Lexical, Masked ITN) should be used for entity detection. The details of the entities detected - like the offset, length and the text itself - will correspond to the text type selected here. */\n  redactionSource?: TranscriptContentType;\n}\n\n/** Supported parameters for an conversational summarization task. */\nexport interface ConversationSummarizationTaskParameters\n  extends PreBuiltTaskParameters {\n  summaryAspects: SummaryAspect[];\n}\n\n/** Defines headers for ConversationAnalysisClient_analyzeConversation operation. */\nexport interface ConversationAnalysisClientAnalyzeConversationExceptionHeaders {\n  /** The error code for specific error that occurred. */\n  xMsErrorCode?: string;\n}\n\n/** Defines headers for ConversationAnalysisClient_conversationAnalysis operation. */\nexport interface ConversationAnalysisClientConversationAnalysisHeaders {\n  operationLocation?: string;\n}\n\n/** Known values of {@link AnalyzeConversationTaskKind} that the service accepts. */\nexport enum KnownAnalyzeConversationTaskKind {\n  /** Conversation */\n  Conversation = \"Conversation\"\n}\n\n/**\n * Defines values for AnalyzeConversationTaskKind. \\\n * {@link KnownAnalyzeConversationTaskKind} can be used interchangeably with AnalyzeConversationTaskKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Conversation**\n */\nexport type AnalyzeConversationTaskKind = string;\n\n/** Known values of {@link AnalyzeConversationTaskResultsKind} that the service accepts. */\nexport enum KnownAnalyzeConversationTaskResultsKind {\n  /** ConversationResult */\n  ConversationResult = \"ConversationResult\"\n}\n\n/**\n * Defines values for AnalyzeConversationTaskResultsKind. \\\n * {@link KnownAnalyzeConversationTaskResultsKind} can be used interchangeably with AnalyzeConversationTaskResultsKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ConversationResult**\n */\nexport type AnalyzeConversationTaskResultsKind = string;\n\n/** Known values of {@link ErrorCode} that the service accepts. */\nexport enum KnownErrorCode {\n  /** InvalidRequest */\n  InvalidRequest = \"InvalidRequest\",\n  /** InvalidArgument */\n  InvalidArgument = \"InvalidArgument\",\n  /** Unauthorized */\n  Unauthorized = \"Unauthorized\",\n  /** Forbidden */\n  Forbidden = \"Forbidden\",\n  /** NotFound */\n  NotFound = \"NotFound\",\n  /** ProjectNotFound */\n  ProjectNotFound = \"ProjectNotFound\",\n  /** OperationNotFound */\n  OperationNotFound = \"OperationNotFound\",\n  /** AzureCognitiveSearchNotFound */\n  AzureCognitiveSearchNotFound = \"AzureCognitiveSearchNotFound\",\n  /** AzureCognitiveSearchIndexNotFound */\n  AzureCognitiveSearchIndexNotFound = \"AzureCognitiveSearchIndexNotFound\",\n  /** TooManyRequests */\n  TooManyRequests = \"TooManyRequests\",\n  /** AzureCognitiveSearchThrottling */\n  AzureCognitiveSearchThrottling = \"AzureCognitiveSearchThrottling\",\n  /** AzureCognitiveSearchIndexLimitReached */\n  AzureCognitiveSearchIndexLimitReached = \"AzureCognitiveSearchIndexLimitReached\",\n  /** InternalServerError */\n  InternalServerError = \"InternalServerError\",\n  /** ServiceUnavailable */\n  ServiceUnavailable = \"ServiceUnavailable\",\n  /** Timeout */\n  Timeout = \"Timeout\",\n  /** QuotaExceeded */\n  QuotaExceeded = \"QuotaExceeded\",\n  /** Conflict */\n  Conflict = \"Conflict\",\n  /** Warning */\n  Warning = \"Warning\"\n}\n\n/**\n * Defines values for ErrorCode. \\\n * {@link KnownErrorCode} can be used interchangeably with ErrorCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InvalidRequest** \\\n * **InvalidArgument** \\\n * **Unauthorized** \\\n * **Forbidden** \\\n * **NotFound** \\\n * **ProjectNotFound** \\\n * **OperationNotFound** \\\n * **AzureCognitiveSearchNotFound** \\\n * **AzureCognitiveSearchIndexNotFound** \\\n * **TooManyRequests** \\\n * **AzureCognitiveSearchThrottling** \\\n * **AzureCognitiveSearchIndexLimitReached** \\\n * **InternalServerError** \\\n * **ServiceUnavailable** \\\n * **Timeout** \\\n * **QuotaExceeded** \\\n * **Conflict** \\\n * **Warning**\n */\nexport type ErrorCode = string;\n\n/** Known values of {@link InnerErrorCode} that the service accepts. */\nexport enum KnownInnerErrorCode {\n  /** InvalidRequest */\n  InvalidRequest = \"InvalidRequest\",\n  /** InvalidParameterValue */\n  InvalidParameterValue = \"InvalidParameterValue\",\n  /** KnowledgeBaseNotFound */\n  KnowledgeBaseNotFound = \"KnowledgeBaseNotFound\",\n  /** AzureCognitiveSearchNotFound */\n  AzureCognitiveSearchNotFound = \"AzureCognitiveSearchNotFound\",\n  /** AzureCognitiveSearchThrottling */\n  AzureCognitiveSearchThrottling = \"AzureCognitiveSearchThrottling\",\n  /** ExtractionFailure */\n  ExtractionFailure = \"ExtractionFailure\",\n  /** InvalidRequestBodyFormat */\n  InvalidRequestBodyFormat = \"InvalidRequestBodyFormat\",\n  /** EmptyRequest */\n  EmptyRequest = \"EmptyRequest\",\n  /** MissingInputDocuments */\n  MissingInputDocuments = \"MissingInputDocuments\",\n  /** InvalidDocument */\n  InvalidDocument = \"InvalidDocument\",\n  /** ModelVersionIncorrect */\n  ModelVersionIncorrect = \"ModelVersionIncorrect\",\n  /** InvalidDocumentBatch */\n  InvalidDocumentBatch = \"InvalidDocumentBatch\",\n  /** UnsupportedLanguageCode */\n  UnsupportedLanguageCode = \"UnsupportedLanguageCode\",\n  /** InvalidCountryHint */\n  InvalidCountryHint = \"InvalidCountryHint\"\n}\n\n/**\n * Defines values for InnerErrorCode. \\\n * {@link KnownInnerErrorCode} can be used interchangeably with InnerErrorCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InvalidRequest** \\\n * **InvalidParameterValue** \\\n * **KnowledgeBaseNotFound** \\\n * **AzureCognitiveSearchNotFound** \\\n * **AzureCognitiveSearchThrottling** \\\n * **ExtractionFailure** \\\n * **InvalidRequestBodyFormat** \\\n * **EmptyRequest** \\\n * **MissingInputDocuments** \\\n * **InvalidDocument** \\\n * **ModelVersionIncorrect** \\\n * **InvalidDocumentBatch** \\\n * **UnsupportedLanguageCode** \\\n * **InvalidCountryHint**\n */\nexport type InnerErrorCode = string;\n\n/** Known values of {@link InputModality} that the service accepts. */\nexport enum KnownInputModality {\n  /** Transcript */\n  Transcript = \"transcript\",\n  /** Text */\n  Text = \"text\"\n}\n\n/**\n * Defines values for InputModality. \\\n * {@link KnownInputModality} can be used interchangeably with InputModality,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **transcript** \\\n * **text**\n */\nexport type InputModality = string;\n\n/** Known values of {@link ConversationDomain} that the service accepts. */\nexport enum KnownConversationDomain {\n  /** Finance */\n  Finance = \"finance\",\n  /** Healthcare */\n  Healthcare = \"healthcare\",\n  /** Generic */\n  Generic = \"generic\"\n}\n\n/**\n * Defines values for ConversationDomain. \\\n * {@link KnownConversationDomain} can be used interchangeably with ConversationDomain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **finance** \\\n * **healthcare** \\\n * **generic**\n */\nexport type ConversationDomain = string;\n\n/** Known values of {@link AnalyzeConversationLROTaskKind} that the service accepts. */\nexport enum KnownAnalyzeConversationLROTaskKind {\n  /** ConversationalPIITask */\n  ConversationalPIITask = \"ConversationalPIITask\",\n  /** ConversationalSummarizationTask */\n  ConversationalSummarizationTask = \"ConversationalSummarizationTask\"\n}\n\n/**\n * Defines values for AnalyzeConversationLROTaskKind. \\\n * {@link KnownAnalyzeConversationLROTaskKind} can be used interchangeably with AnalyzeConversationLROTaskKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ConversationalPIITask** \\\n * **ConversationalSummarizationTask**\n */\nexport type AnalyzeConversationLROTaskKind = string;\n\n/** Known values of {@link JobState} that the service accepts. */\nexport enum KnownJobState {\n  /** NotStarted */\n  NotStarted = \"notStarted\",\n  /** Running */\n  Running = \"running\",\n  /** Succeeded */\n  Succeeded = \"succeeded\",\n  /** PartiallyCompleted */\n  PartiallyCompleted = \"partiallyCompleted\",\n  /** Failed */\n  Failed = \"failed\",\n  /** Cancelled */\n  Cancelled = \"cancelled\",\n  /** Cancelling */\n  Cancelling = \"cancelling\"\n}\n\n/**\n * Defines values for JobState. \\\n * {@link KnownJobState} can be used interchangeably with JobState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **notStarted** \\\n * **running** \\\n * **succeeded** \\\n * **partiallyCompleted** \\\n * **failed** \\\n * **cancelled** \\\n * **cancelling**\n */\nexport type JobState = string;\n\n/** Known values of {@link AnalyzeConversationResultsKind} that the service accepts. */\nexport enum KnownAnalyzeConversationResultsKind {\n  /** ConversationalPIIResults */\n  ConversationalPIIResults = \"ConversationalPIIResults\",\n  /** ConversationalSummarizationResults */\n  ConversationalSummarizationResults = \"ConversationalSummarizationResults\"\n}\n\n/**\n * Defines values for AnalyzeConversationResultsKind. \\\n * {@link KnownAnalyzeConversationResultsKind} can be used interchangeably with AnalyzeConversationResultsKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ConversationalPIIResults** \\\n * **ConversationalSummarizationResults**\n */\nexport type AnalyzeConversationResultsKind = string;\n\n/** Known values of {@link TaskState} that the service accepts. */\nexport enum KnownTaskState {\n  /** NotStarted */\n  NotStarted = \"notStarted\",\n  /** Running */\n  Running = \"running\",\n  /** Succeeded */\n  Succeeded = \"succeeded\",\n  /** Failed */\n  Failed = \"failed\",\n  /** Cancelled */\n  Cancelled = \"cancelled\",\n  /** Cancelling */\n  Cancelling = \"cancelling\"\n}\n\n/**\n * Defines values for TaskState. \\\n * {@link KnownTaskState} can be used interchangeably with TaskState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **notStarted** \\\n * **running** \\\n * **succeeded** \\\n * **failed** \\\n * **cancelled** \\\n * **cancelling**\n */\nexport type TaskState = string;\n\n/** Known values of {@link Role} that the service accepts. */\nexport enum KnownRole {\n  /** Agent */\n  Agent = \"agent\",\n  /** Customer */\n  Customer = \"customer\",\n  /** Generic */\n  Generic = \"generic\"\n}\n\n/**\n * Defines values for Role. \\\n * {@link KnownRole} can be used interchangeably with Role,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **agent** \\\n * **customer** \\\n * **generic**\n */\nexport type Role = string;\n\n/** Known values of {@link StringIndexType} that the service accepts. */\nexport enum KnownStringIndexType {\n  /** Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. */\n  TextElementsV8 = \"TextElements_v8\",\n  /** Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. */\n  UnicodeCodePoint = \"UnicodeCodePoint\",\n  /** Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript. */\n  Utf16CodeUnit = \"Utf16CodeUnit\"\n}\n\n/**\n * Defines values for StringIndexType. \\\n * {@link KnownStringIndexType} can be used interchangeably with StringIndexType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TextElements_v8**: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo. \\\n * **UnicodeCodePoint**: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python. \\\n * **Utf16CodeUnit**: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.\n */\nexport type StringIndexType = string;\n\n/** Known values of {@link TargetProjectKind} that the service accepts. */\nexport enum KnownTargetProjectKind {\n  /** Luis */\n  Luis = \"Luis\",\n  /** Conversation */\n  Conversation = \"Conversation\",\n  /** QuestionAnswering */\n  QuestionAnswering = \"QuestionAnswering\",\n  /** NonLinked */\n  NonLinked = \"NonLinked\"\n}\n\n/**\n * Defines values for TargetProjectKind. \\\n * {@link KnownTargetProjectKind} can be used interchangeably with TargetProjectKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Luis** \\\n * **Conversation** \\\n * **QuestionAnswering** \\\n * **NonLinked**\n */\nexport type TargetProjectKind = string;\n\n/** Known values of {@link ProjectKind} that the service accepts. */\nexport enum KnownProjectKind {\n  /** Conversation */\n  Conversation = \"Conversation\",\n  /** Orchestration */\n  Orchestration = \"Orchestration\"\n}\n\n/**\n * Defines values for ProjectKind. \\\n * {@link KnownProjectKind} can be used interchangeably with ProjectKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Conversation** \\\n * **Orchestration**\n */\nexport type ProjectKind = string;\n\n/** Known values of {@link ResolutionKind} that the service accepts. */\nexport enum KnownResolutionKind {\n  /** Boolean */\n  Boolean = \"Boolean\",\n  /** DateTime */\n  DateTime = \"DateTime\",\n  /** Number */\n  Number = \"Number\",\n  /** Ordinal */\n  Ordinal = \"Ordinal\",\n  /** Speed */\n  Speed = \"Speed\",\n  /** Weight */\n  Weight = \"Weight\",\n  /** Length */\n  Length = \"Length\",\n  /** Volume */\n  Volume = \"Volume\",\n  /** Area */\n  Area = \"Area\",\n  /** Age */\n  Age = \"Age\",\n  /** Information */\n  Information = \"Information\",\n  /** Temperature */\n  Temperature = \"Temperature\",\n  /** Currency */\n  Currency = \"Currency\",\n  /** NumericRange */\n  NumericRange = \"NumericRange\",\n  /** TemporalSpan */\n  TemporalSpan = \"TemporalSpan\"\n}\n\n/**\n * Defines values for ResolutionKind. \\\n * {@link KnownResolutionKind} can be used interchangeably with ResolutionKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Boolean** \\\n * **DateTime** \\\n * **Number** \\\n * **Ordinal** \\\n * **Speed** \\\n * **Weight** \\\n * **Length** \\\n * **Volume** \\\n * **Area** \\\n * **Age** \\\n * **Information** \\\n * **Temperature** \\\n * **Currency** \\\n * **NumericRange** \\\n * **TemporalSpan**\n */\nexport type ResolutionKind = string;\n\n/** Known values of {@link ExtraInformationKind} that the service accepts. */\nexport enum KnownExtraInformationKind {\n  /** EntitySubtype */\n  EntitySubtype = \"EntitySubtype\",\n  /** ListKey */\n  ListKey = \"ListKey\"\n}\n\n/**\n * Defines values for ExtraInformationKind. \\\n * {@link KnownExtraInformationKind} can be used interchangeably with ExtraInformationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EntitySubtype** \\\n * **ListKey**\n */\nexport type ExtraInformationKind = string;\n\n/** Known values of {@link RankerKind} that the service accepts. */\nexport enum KnownRankerKind {\n  /** Question only ranker. */\n  QuestionOnly = \"QuestionOnly\",\n  /** Default ranker. */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for RankerKind. \\\n * {@link KnownRankerKind} can be used interchangeably with RankerKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **QuestionOnly**: Question only ranker. \\\n * **Default**: Default ranker.\n */\nexport type RankerKind = string;\n\n/** Known values of {@link LogicalOperationKind} that the service accepts. */\nexport enum KnownLogicalOperationKind {\n  /** AND */\n  AND = \"AND\",\n  /** OR */\n  OR = \"OR\"\n}\n\n/**\n * Defines values for LogicalOperationKind. \\\n * {@link KnownLogicalOperationKind} can be used interchangeably with LogicalOperationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AND** \\\n * **OR**\n */\nexport type LogicalOperationKind = string;\n\n/** Known values of {@link AgeUnit} that the service accepts. */\nexport enum KnownAgeUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Year */\n  Year = \"Year\",\n  /** Month */\n  Month = \"Month\",\n  /** Week */\n  Week = \"Week\",\n  /** Day */\n  Day = \"Day\"\n}\n\n/**\n * Defines values for AgeUnit. \\\n * {@link KnownAgeUnit} can be used interchangeably with AgeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Year** \\\n * **Month** \\\n * **Week** \\\n * **Day**\n */\nexport type AgeUnit = string;\n\n/** Known values of {@link VolumeUnit} that the service accepts. */\nexport enum KnownVolumeUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** CubicMeter */\n  CubicMeter = \"CubicMeter\",\n  /** CubicCentimeter */\n  CubicCentimeter = \"CubicCentimeter\",\n  /** CubicMillimeter */\n  CubicMillimeter = \"CubicMillimeter\",\n  /** Hectoliter */\n  Hectoliter = \"Hectoliter\",\n  /** Decaliter */\n  Decaliter = \"Decaliter\",\n  /** Liter */\n  Liter = \"Liter\",\n  /** Centiliter */\n  Centiliter = \"Centiliter\",\n  /** Milliliter */\n  Milliliter = \"Milliliter\",\n  /** CubicYard */\n  CubicYard = \"CubicYard\",\n  /** CubicInch */\n  CubicInch = \"CubicInch\",\n  /** CubicFoot */\n  CubicFoot = \"CubicFoot\",\n  /** CubicMile */\n  CubicMile = \"CubicMile\",\n  /** FluidOunce */\n  FluidOunce = \"FluidOunce\",\n  /** Teaspoon */\n  Teaspoon = \"Teaspoon\",\n  /** Tablespoon */\n  Tablespoon = \"Tablespoon\",\n  /** Pint */\n  Pint = \"Pint\",\n  /** Quart */\n  Quart = \"Quart\",\n  /** Cup */\n  Cup = \"Cup\",\n  /** Gill */\n  Gill = \"Gill\",\n  /** Pinch */\n  Pinch = \"Pinch\",\n  /** FluidDram */\n  FluidDram = \"FluidDram\",\n  /** Barrel */\n  Barrel = \"Barrel\",\n  /** Minim */\n  Minim = \"Minim\",\n  /** Cord */\n  Cord = \"Cord\",\n  /** Peck */\n  Peck = \"Peck\",\n  /** Bushel */\n  Bushel = \"Bushel\",\n  /** Hogshead */\n  Hogshead = \"Hogshead\"\n}\n\n/**\n * Defines values for VolumeUnit. \\\n * {@link KnownVolumeUnit} can be used interchangeably with VolumeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **CubicMeter** \\\n * **CubicCentimeter** \\\n * **CubicMillimeter** \\\n * **Hectoliter** \\\n * **Decaliter** \\\n * **Liter** \\\n * **Centiliter** \\\n * **Milliliter** \\\n * **CubicYard** \\\n * **CubicInch** \\\n * **CubicFoot** \\\n * **CubicMile** \\\n * **FluidOunce** \\\n * **Teaspoon** \\\n * **Tablespoon** \\\n * **Pint** \\\n * **Quart** \\\n * **Cup** \\\n * **Gill** \\\n * **Pinch** \\\n * **FluidDram** \\\n * **Barrel** \\\n * **Minim** \\\n * **Cord** \\\n * **Peck** \\\n * **Bushel** \\\n * **Hogshead**\n */\nexport type VolumeUnit = string;\n\n/** Known values of {@link SpeedUnit} that the service accepts. */\nexport enum KnownSpeedUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** MetersPerSecond */\n  MetersPerSecond = \"MetersPerSecond\",\n  /** KilometersPerHour */\n  KilometersPerHour = \"KilometersPerHour\",\n  /** KilometersPerMinute */\n  KilometersPerMinute = \"KilometersPerMinute\",\n  /** KilometersPerSecond */\n  KilometersPerSecond = \"KilometersPerSecond\",\n  /** MilesPerHour */\n  MilesPerHour = \"MilesPerHour\",\n  /** Knot */\n  Knot = \"Knot\",\n  /** FootPerSecond */\n  FootPerSecond = \"FootPerSecond\",\n  /** FootPerMinute */\n  FootPerMinute = \"FootPerMinute\",\n  /** YardsPerMinute */\n  YardsPerMinute = \"YardsPerMinute\",\n  /** YardsPerSecond */\n  YardsPerSecond = \"YardsPerSecond\",\n  /** MetersPerMillisecond */\n  MetersPerMillisecond = \"MetersPerMillisecond\",\n  /** CentimetersPerMillisecond */\n  CentimetersPerMillisecond = \"CentimetersPerMillisecond\",\n  /** KilometersPerMillisecond */\n  KilometersPerMillisecond = \"KilometersPerMillisecond\"\n}\n\n/**\n * Defines values for SpeedUnit. \\\n * {@link KnownSpeedUnit} can be used interchangeably with SpeedUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **MetersPerSecond** \\\n * **KilometersPerHour** \\\n * **KilometersPerMinute** \\\n * **KilometersPerSecond** \\\n * **MilesPerHour** \\\n * **Knot** \\\n * **FootPerSecond** \\\n * **FootPerMinute** \\\n * **YardsPerMinute** \\\n * **YardsPerSecond** \\\n * **MetersPerMillisecond** \\\n * **CentimetersPerMillisecond** \\\n * **KilometersPerMillisecond**\n */\nexport type SpeedUnit = string;\n\n/** Known values of {@link AreaUnit} that the service accepts. */\nexport enum KnownAreaUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** SquareKilometer */\n  SquareKilometer = \"SquareKilometer\",\n  /** SquareHectometer */\n  SquareHectometer = \"SquareHectometer\",\n  /** SquareDecameter */\n  SquareDecameter = \"SquareDecameter\",\n  /** SquareDecimeter */\n  SquareDecimeter = \"SquareDecimeter\",\n  /** SquareMeter */\n  SquareMeter = \"SquareMeter\",\n  /** SquareCentimeter */\n  SquareCentimeter = \"SquareCentimeter\",\n  /** SquareMillimeter */\n  SquareMillimeter = \"SquareMillimeter\",\n  /** SquareInch */\n  SquareInch = \"SquareInch\",\n  /** SquareFoot */\n  SquareFoot = \"SquareFoot\",\n  /** SquareMile */\n  SquareMile = \"SquareMile\",\n  /** SquareYard */\n  SquareYard = \"SquareYard\",\n  /** Acre */\n  Acre = \"Acre\"\n}\n\n/**\n * Defines values for AreaUnit. \\\n * {@link KnownAreaUnit} can be used interchangeably with AreaUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **SquareKilometer** \\\n * **SquareHectometer** \\\n * **SquareDecameter** \\\n * **SquareDecimeter** \\\n * **SquareMeter** \\\n * **SquareCentimeter** \\\n * **SquareMillimeter** \\\n * **SquareInch** \\\n * **SquareFoot** \\\n * **SquareMile** \\\n * **SquareYard** \\\n * **Acre**\n */\nexport type AreaUnit = string;\n\n/** Known values of {@link LengthUnit} that the service accepts. */\nexport enum KnownLengthUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Kilometer */\n  Kilometer = \"Kilometer\",\n  /** Hectometer */\n  Hectometer = \"Hectometer\",\n  /** Decameter */\n  Decameter = \"Decameter\",\n  /** Meter */\n  Meter = \"Meter\",\n  /** Decimeter */\n  Decimeter = \"Decimeter\",\n  /** Centimeter */\n  Centimeter = \"Centimeter\",\n  /** Millimeter */\n  Millimeter = \"Millimeter\",\n  /** Micrometer */\n  Micrometer = \"Micrometer\",\n  /** Nanometer */\n  Nanometer = \"Nanometer\",\n  /** Picometer */\n  Picometer = \"Picometer\",\n  /** Mile */\n  Mile = \"Mile\",\n  /** Yard */\n  Yard = \"Yard\",\n  /** Inch */\n  Inch = \"Inch\",\n  /** Foot */\n  Foot = \"Foot\",\n  /** LightYear */\n  LightYear = \"LightYear\",\n  /** Pt */\n  Pt = \"Pt\"\n}\n\n/**\n * Defines values for LengthUnit. \\\n * {@link KnownLengthUnit} can be used interchangeably with LengthUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Kilometer** \\\n * **Hectometer** \\\n * **Decameter** \\\n * **Meter** \\\n * **Decimeter** \\\n * **Centimeter** \\\n * **Millimeter** \\\n * **Micrometer** \\\n * **Nanometer** \\\n * **Picometer** \\\n * **Mile** \\\n * **Yard** \\\n * **Inch** \\\n * **Foot** \\\n * **LightYear** \\\n * **Pt**\n */\nexport type LengthUnit = string;\n\n/** Known values of {@link InformationUnit} that the service accepts. */\nexport enum KnownInformationUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Bit */\n  Bit = \"Bit\",\n  /** Kilobit */\n  Kilobit = \"Kilobit\",\n  /** Megabit */\n  Megabit = \"Megabit\",\n  /** Gigabit */\n  Gigabit = \"Gigabit\",\n  /** Terabit */\n  Terabit = \"Terabit\",\n  /** Petabit */\n  Petabit = \"Petabit\",\n  /** Byte */\n  Byte = \"Byte\",\n  /** Kilobyte */\n  Kilobyte = \"Kilobyte\",\n  /** Megabyte */\n  Megabyte = \"Megabyte\",\n  /** Gigabyte */\n  Gigabyte = \"Gigabyte\",\n  /** Terabyte */\n  Terabyte = \"Terabyte\",\n  /** Petabyte */\n  Petabyte = \"Petabyte\"\n}\n\n/**\n * Defines values for InformationUnit. \\\n * {@link KnownInformationUnit} can be used interchangeably with InformationUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Bit** \\\n * **Kilobit** \\\n * **Megabit** \\\n * **Gigabit** \\\n * **Terabit** \\\n * **Petabit** \\\n * **Byte** \\\n * **Kilobyte** \\\n * **Megabyte** \\\n * **Gigabyte** \\\n * **Terabyte** \\\n * **Petabyte**\n */\nexport type InformationUnit = string;\n\n/** Known values of {@link TemperatureUnit} that the service accepts. */\nexport enum KnownTemperatureUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Fahrenheit */\n  Fahrenheit = \"Fahrenheit\",\n  /** Kelvin */\n  Kelvin = \"Kelvin\",\n  /** Rankine */\n  Rankine = \"Rankine\",\n  /** Celsius */\n  Celsius = \"Celsius\"\n}\n\n/**\n * Defines values for TemperatureUnit. \\\n * {@link KnownTemperatureUnit} can be used interchangeably with TemperatureUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Fahrenheit** \\\n * **Kelvin** \\\n * **Rankine** \\\n * **Celsius**\n */\nexport type TemperatureUnit = string;\n\n/** Known values of {@link WeightUnit} that the service accepts. */\nexport enum KnownWeightUnit {\n  /** Unspecified */\n  Unspecified = \"Unspecified\",\n  /** Kilogram */\n  Kilogram = \"Kilogram\",\n  /** Gram */\n  Gram = \"Gram\",\n  /** Milligram */\n  Milligram = \"Milligram\",\n  /** Gallon */\n  Gallon = \"Gallon\",\n  /** MetricTon */\n  MetricTon = \"MetricTon\",\n  /** Ton */\n  Ton = \"Ton\",\n  /** Pound */\n  Pound = \"Pound\",\n  /** Ounce */\n  Ounce = \"Ounce\",\n  /** Grain */\n  Grain = \"Grain\",\n  /** PennyWeight */\n  PennyWeight = \"PennyWeight\",\n  /** LongTonBritish */\n  LongTonBritish = \"LongTonBritish\",\n  /** ShortTonUS */\n  ShortTonUS = \"ShortTonUS\",\n  /** ShortHundredWeightUS */\n  ShortHundredWeightUS = \"ShortHundredWeightUS\",\n  /** Stone */\n  Stone = \"Stone\",\n  /** Dram */\n  Dram = \"Dram\"\n}\n\n/**\n * Defines values for WeightUnit. \\\n * {@link KnownWeightUnit} can be used interchangeably with WeightUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unspecified** \\\n * **Kilogram** \\\n * **Gram** \\\n * **Milligram** \\\n * **Gallon** \\\n * **MetricTon** \\\n * **Ton** \\\n * **Pound** \\\n * **Ounce** \\\n * **Grain** \\\n * **PennyWeight** \\\n * **LongTonBritish** \\\n * **ShortTonUS** \\\n * **ShortHundredWeightUS** \\\n * **Stone** \\\n * **Dram**\n */\nexport type WeightUnit = string;\n\n/** Known values of {@link DateTimeSubKind} that the service accepts. */\nexport enum KnownDateTimeSubKind {\n  /** Time */\n  Time = \"Time\",\n  /** Date */\n  Date = \"Date\",\n  /** DateTime */\n  DateTime = \"DateTime\",\n  /** Duration */\n  Duration = \"Duration\",\n  /** Set */\n  Set = \"Set\"\n}\n\n/**\n * Defines values for DateTimeSubKind. \\\n * {@link KnownDateTimeSubKind} can be used interchangeably with DateTimeSubKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Time** \\\n * **Date** \\\n * **DateTime** \\\n * **Duration** \\\n * **Set**\n */\nexport type DateTimeSubKind = string;\n\n/** Known values of {@link TemporalModifier} that the service accepts. */\nexport enum KnownTemporalModifier {\n  /** AfterApprox */\n  AfterApprox = \"AfterApprox\",\n  /** Before */\n  Before = \"Before\",\n  /** BeforeStart */\n  BeforeStart = \"BeforeStart\",\n  /** Approx */\n  Approx = \"Approx\",\n  /** ReferenceUndefined */\n  ReferenceUndefined = \"ReferenceUndefined\",\n  /** SinceEnd */\n  SinceEnd = \"SinceEnd\",\n  /** AfterMid */\n  AfterMid = \"AfterMid\",\n  /** Start */\n  Start = \"Start\",\n  /** After */\n  After = \"After\",\n  /** BeforeEnd */\n  BeforeEnd = \"BeforeEnd\",\n  /** Until */\n  Until = \"Until\",\n  /** End */\n  End = \"End\",\n  /** Less */\n  Less = \"Less\",\n  /** Since */\n  Since = \"Since\",\n  /** AfterStart */\n  AfterStart = \"AfterStart\",\n  /** BeforeApprox */\n  BeforeApprox = \"BeforeApprox\",\n  /** Mid */\n  Mid = \"Mid\",\n  /** More */\n  More = \"More\"\n}\n\n/**\n * Defines values for TemporalModifier. \\\n * {@link KnownTemporalModifier} can be used interchangeably with TemporalModifier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AfterApprox** \\\n * **Before** \\\n * **BeforeStart** \\\n * **Approx** \\\n * **ReferenceUndefined** \\\n * **SinceEnd** \\\n * **AfterMid** \\\n * **Start** \\\n * **After** \\\n * **BeforeEnd** \\\n * **Until** \\\n * **End** \\\n * **Less** \\\n * **Since** \\\n * **AfterStart** \\\n * **BeforeApprox** \\\n * **Mid** \\\n * **More**\n */\nexport type TemporalModifier = string;\n\n/** Known values of {@link NumberKind} that the service accepts. */\nexport enum KnownNumberKind {\n  /** Integer */\n  Integer = \"Integer\",\n  /** Decimal */\n  Decimal = \"Decimal\",\n  /** Power */\n  Power = \"Power\",\n  /** Fraction */\n  Fraction = \"Fraction\",\n  /** Percent */\n  Percent = \"Percent\",\n  /** Unspecified */\n  Unspecified = \"Unspecified\"\n}\n\n/**\n * Defines values for NumberKind. \\\n * {@link KnownNumberKind} can be used interchangeably with NumberKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Integer** \\\n * **Decimal** \\\n * **Power** \\\n * **Fraction** \\\n * **Percent** \\\n * **Unspecified**\n */\nexport type NumberKind = string;\n\n/** Known values of {@link RelativeTo} that the service accepts. */\nexport enum KnownRelativeTo {\n  /** Current */\n  Current = \"Current\",\n  /** End */\n  End = \"End\",\n  /** Start */\n  Start = \"Start\"\n}\n\n/**\n * Defines values for RelativeTo. \\\n * {@link KnownRelativeTo} can be used interchangeably with RelativeTo,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Current** \\\n * **End** \\\n * **Start**\n */\nexport type RelativeTo = string;\n\n/** Known values of {@link RangeKind} that the service accepts. */\nexport enum KnownRangeKind {\n  /** Number */\n  Number = \"Number\",\n  /** Speed */\n  Speed = \"Speed\",\n  /** Weight */\n  Weight = \"Weight\",\n  /** Length */\n  Length = \"Length\",\n  /** Volume */\n  Volume = \"Volume\",\n  /** Area */\n  Area = \"Area\",\n  /** Age */\n  Age = \"Age\",\n  /** Information */\n  Information = \"Information\",\n  /** Temperature */\n  Temperature = \"Temperature\",\n  /** Currency */\n  Currency = \"Currency\"\n}\n\n/**\n * Defines values for RangeKind. \\\n * {@link KnownRangeKind} can be used interchangeably with RangeKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Number** \\\n * **Speed** \\\n * **Weight** \\\n * **Length** \\\n * **Volume** \\\n * **Area** \\\n * **Age** \\\n * **Information** \\\n * **Temperature** \\\n * **Currency**\n */\nexport type RangeKind = string;\n\n/** Known values of {@link ConversationPIICategory} that the service accepts. */\nexport enum KnownConversationPIICategory {\n  /** Address */\n  Address = \"Address\",\n  /** CreditCard */\n  CreditCard = \"CreditCard\",\n  /** Email */\n  Email = \"Email\",\n  /** Name */\n  Name = \"Name\",\n  /** NumericIdentifier */\n  NumericIdentifier = \"NumericIdentifier\",\n  /** PhoneNumber */\n  PhoneNumber = \"PhoneNumber\",\n  /** All */\n  All = \"All\",\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for ConversationPIICategory. \\\n * {@link KnownConversationPIICategory} can be used interchangeably with ConversationPIICategory,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Address** \\\n * **CreditCard** \\\n * **Email** \\\n * **Name** \\\n * **NumericIdentifier** \\\n * **PhoneNumber** \\\n * **All** \\\n * **Default**\n */\nexport type ConversationPIICategory = string;\n\n/** Known values of {@link TranscriptContentType} that the service accepts. */\nexport enum KnownTranscriptContentType {\n  /** Lexical */\n  Lexical = \"lexical\",\n  /** Itn */\n  Itn = \"itn\",\n  /** MaskedItn */\n  MaskedItn = \"maskedItn\",\n  /** Text */\n  Text = \"text\"\n}\n\n/**\n * Defines values for TranscriptContentType. \\\n * {@link KnownTranscriptContentType} can be used interchangeably with TranscriptContentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **lexical** \\\n * **itn** \\\n * **maskedItn** \\\n * **text**\n */\nexport type TranscriptContentType = string;\n\n/** Known values of {@link SummaryAspect} that the service accepts. */\nexport enum KnownSummaryAspect {\n  /** Issue */\n  Issue = \"issue\",\n  /** Resolution */\n  Resolution = \"resolution\"\n}\n\n/**\n * Defines values for SummaryAspect. \\\n * {@link KnownSummaryAspect} can be used interchangeably with SummaryAspect,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **issue** \\\n * **resolution**\n */\nexport type SummaryAspect = string;\n\n/** Optional parameters. */\nexport interface AnalyzeConversationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the analyzeConversation operation. */\nexport type AnalyzeConversationResponse = AnalyzeConversationTaskResultUnion;\n\n/** Optional parameters. */\nexport interface ConversationAnalysisOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the conversationAnalysis operation. */\nexport type ConversationAnalysisResponse = AnalyzeConversationJobState;\n\n/** Optional parameters. */\nexport interface ConversationAnalysisClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}